<?xml version="1.0" encoding="utf-8" ?>
<Sqls>


  <Sql>
    <key>Save</key>
    <query>
       insert into eve_paleatoria(
           pafecha,
           sic2hop,
           hop2ut30d,
           ut30d2sort,
           sort2prue,
           prueno2pa,
           pa2fin,
           pruesi2gprue,
           gprueno2nprue,
           nprue2fin,
           gpruesi2uprue,
           uprue2rprue,
           rprue2oa,
           oa2priarr,
           priarrsi2exit,
           priarrno2rearr,
           rearrno2noexit,
           rearrsi2segarr,
           segarrno2noexit,
           segarrsi2exit,
           exitno2fallunid,
           fallunidsi2noexit,
           exitsi2resprue,
           fallunidno2pabort,
           pabort2resprue,
           resprue2fin,
           noexit2resreslt,
           resreslt2fin,
           final,
           lastuser,
           lastdate,
           programador,
           paobservacion,
           paverifdatosing
       )
       values(
           :pafecha,
           :sic2hop,
           :hop2ut30d,
           :ut30d2sort,
           :sort2prue,
           :prueno2pa,
           :pa2fin,
           :pruesi2gprue,
           :gprueno2nprue,
           :nprue2fin,
           :gpruesi2uprue,
           :uprue2rprue,
           :rprue2oa,
           :oa2priarr,
           :priarrsi2exit,
           :priarrno2rearr,
           :rearrno2noexit,
           :rearrsi2segarr,
           :segarrno2noexit,
           :segarrsi2exit,
           :exitno2fallunid,
           :fallunidsi2noexit,
           :exitsi2resprue,
           :fallunidno2pabort,
           :pabort2resprue,
           :resprue2fin,
           :noexit2resreslt,
           :resreslt2fin,
           :final,
           :lastuser,
           :lastdate,
           :programador,
           :paobservacion,
           :paverifdatosing
       )
    </query>
  </Sql>

  <Sql>
    <key>Update</key>
    <query>
       update eve_paleatoria
       set
           sic2hop = :sic2hop,
           hop2ut30d = :hop2ut30d,
           ut30d2sort = :ut30d2sort,
           sort2prue = :sort2prue,
           prueno2pa = :prueno2pa,
           pa2fin = :pa2fin,
           pruesi2gprue = :pruesi2gprue,
           gprueno2nprue = :gprueno2nprue,
           nprue2fin = :nprue2fin,
           gpruesi2uprue = :gpruesi2uprue,
           uprue2rprue = :uprue2rprue,
           rprue2oa = :rprue2oa,
           oa2priarr = :oa2priarr,
           priarrsi2exit = :priarrsi2exit,
           priarrno2rearr = :priarrno2rearr,
           rearrno2noexit = :rearrno2noexit,
           rearrsi2segarr = :rearrsi2segarr,
           segarrno2noexit = :segarrno2noexit,
           segarrsi2exit = :segarrsi2exit,
           exitno2fallunid = :exitno2fallunid,
           fallunidsi2noexit = :fallunidsi2noexit,
           exitsi2resprue = :exitsi2resprue,
           fallunidno2pabort = :fallunidno2pabort,
           pabort2resprue = :pabort2resprue,
           resprue2fin = :resprue2fin,
           noexit2resreslt = :noexit2resreslt,
           resreslt2fin = :resreslt2fin,
           final = :final,
           lastuser = :lastuser,
           lastdate = :lastdate,
           programador = :programador,
           paobservacion = :paobservacion,
           paverifdatosing = :paverifdatosing
       where
           pafecha = :pafecha
    </query>
  </Sql>

  <Sql>
    <key>Delete</key>
    <query>
       delete from eve_paleatoria
       where
           pafecha = :pafecha
    </query>
  </Sql>

  <Sql>
    <key>GetById</key>
    <query>
       select
           pafecha,
           sic2hop,
           hop2ut30d,
           ut30d2sort,
           sort2prue,
           prueno2pa,
           pa2fin,
           pruesi2gprue,
           gprueno2nprue,
           nprue2fin,
           gpruesi2uprue,
           uprue2rprue,
           rprue2oa,
           oa2priarr,
           priarrsi2exit,
           priarrno2rearr,
           rearrno2noexit,
           rearrsi2segarr,
           segarrno2noexit,
           segarrsi2exit,
           exitno2fallunid,
           fallunidsi2noexit,
           exitsi2resprue,
           fallunidno2pabort,
           pabort2resprue,
           resprue2fin,
           noexit2resreslt,
           resreslt2fin,
           final,
           lastuser,
           lastdate,
           programador,
           paobservacion,
           paverifdatosing
       from
           eve_paleatoria           
       where
           pafecha = :pafecha

    </query>
  </Sql>

  <Sql>
    <key>List</key>
    <query>
      select pafecha,
      CASE prueno2pa
      WHEN 'S' THEN 'No hay prueba'
      else (
      select logdescrip from pr_logsorteo
      where logtipo = 'XEQ' and
      logfecha between to_date(to_char(pafecha,'yyyy-mm-dd')|| '00:00:00','yyyy-mm-dd hh24:mi:ss')
      and to_date(to_char(pafecha,'yyyy-mm-dd')|| '23:59:59','yyyy-mm-dd hh24:mi:ss')
      )
      end Resultado, exitsi2resprue pruebaexitosa,priarrsi2exit primerintentoexitoso,
      segarrsi2exit segundointentoexitoso, lastuser,lastdate
      
      from eve_paleatoria

    </query>
  </Sql>
  
    <Sql>
    <key>ObtenerListado</key>
    <query>
      select
      *
      from (
      select pafecha,
      CASE prueno2pa
      WHEN 'S' THEN 'No hay prueba'
      else (
      select logdescrip from pr_logsorteo
      where logtipo = 'XEQ' and
      logfecha between to_date(to_char(pafecha,'yyyy-mm-dd')|| '00:00:00','yyyy-mm-dd hh24:mi:ss')
      and to_date(to_char(pafecha,'yyyy-mm-dd')|| '23:59:59','yyyy-mm-dd hh24:mi:ss')
      )
      end Resultado, exitsi2resprue pruebaexitosa,priarrsi2exit primerintentoexitoso,
      segarrsi2exit segundointentoexitoso, lastuser,lastdate,
      (row_number() over (order by pafecha desc)) as r
      from eve_paleatoria
      WHERE
      pafecha>= TO_DATE('{0} 00:00:00','YYYY-MM-DD HH24:MI:SS') and
      pafecha &lt;= TO_DATE('{1} 00:00:00','YYYY-MM-DD HH24:MI:SS') 
      order by pafecha desc
      )
      where (r >= ((({2}-1) * {3}) + 1) and r &lt; (({2} * {3}) + 1 )) or ({2} = -1 and {3} = -1)
    </query>
  </Sql>


  <Sql>
    <key>GetByCriteria</key>
    <query>
       select
           pafecha,
           sic2hop,
           hop2ut30d,
           ut30d2sort,
           sort2prue,
           prueno2pa,
           pa2fin,
           pruesi2gprue,
           gprueno2nprue,
           nprue2fin,
           gpruesi2uprue,
           uprue2rprue,
           rprue2oa,
           oa2priarr,
           priarrsi2exit,
           priarrno2rearr,
           rearrno2noexit,
           rearrsi2segarr,
           segarrno2noexit,
           segarrsi2exit,
           exitno2fallunid,
           fallunidsi2noexit,
           exitsi2resprue,
           fallunidno2pabort,
           pabort2resprue,
           resprue2fin,
           noexit2resreslt,
           resreslt2fin,
           final,
           lastuser,
           lastdate,
           programador,
           paobservacion,
           paverifdatosing
       from
           eve_paleatoria
    </query>
  </Sql>

  <Sql>
    <key>TotalRegistros</key>
    <query>
      select count(*)
      from eve_paleatoria
      WHERE
      pafecha>= TO_DATE('{0} 00:00:00','YYYY-MM-DD HH24:MI:SS') and
      pafecha &lt;= TO_DATE('{1} 00:00:00','YYYY-MM-DD HH24:MI:SS')

    </query>
  </Sql>


  <Sql>
    <key>ProgramadorPrueba</key>
    <query>
      select nvl(PROGRAMADOR,'') equicodi
      from eve_paleatoria
      where pafecha=to_date('{0}','yyyy-mm-dd')
    </query>
  </Sql>
  
  
  
</Sqls>
