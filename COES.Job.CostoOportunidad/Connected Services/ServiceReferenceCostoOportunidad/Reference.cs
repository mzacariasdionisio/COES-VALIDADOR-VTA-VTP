//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace COES.Job.CostoOportunidad.ServiceReferenceCostoOportunidad {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="www.coes.org.pe", ConfigurationName="ServiceReferenceCostoOportunidad.ICostoOportunidadServicio")]
    public interface ICostoOportunidadServicio {
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoOportunidadServicio/ImportarTodoSeñalesSP7", ReplyAction="www.coes.org.pe/ICostoOportunidadServicio/ImportarTodoSeñalesSP7Response")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="hayEjecucionEnCurso")]
        bool ImportarTodoSeñalesSP7(int tipoImportacion, System.Nullable<System.DateTime> FechaDiario, int copercodi, int covercodi, string usuario, string tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoOportunidadServicio/ImportarTodoSeñalesSP7", ReplyAction="www.coes.org.pe/ICostoOportunidadServicio/ImportarTodoSeñalesSP7Response")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="hayEjecucionEnCurso")]
        System.Threading.Tasks.Task<bool> ImportarTodoSeñalesSP7Async(int tipoImportacion, System.Nullable<System.DateTime> FechaDiario, int copercodi, int covercodi, string usuario, string tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoOportunidadServicio/ProcesarCalculo", ReplyAction="www.coes.org.pe/ICostoOportunidadServicio/ProcesarCalculoResponse")]
        int ProcesarCalculo(int idVersion, System.DateTime fechaInicio, System.DateTime fechaFin, string usuario, int option);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoOportunidadServicio/ProcesarCalculo", ReplyAction="www.coes.org.pe/ICostoOportunidadServicio/ProcesarCalculoResponse")]
        System.Threading.Tasks.Task<int> ProcesarCalculoAsync(int idVersion, System.DateTime fechaInicio, System.DateTime fechaFin, string usuario, int option);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoOportunidadServicio/EjecutarReproceso", ReplyAction="www.coes.org.pe/ICostoOportunidadServicio/EjecutarReprocesoResponse")]
        int EjecutarReproceso(int idVersion, int indicador, System.DateTime fecInicio, System.DateTime fecFin, int indicadorDatos, string usuario, int option, int importarSP7);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoOportunidadServicio/EjecutarReproceso", ReplyAction="www.coes.org.pe/ICostoOportunidadServicio/EjecutarReprocesoResponse")]
        System.Threading.Tasks.Task<int> EjecutarReprocesoAsync(int idVersion, int indicador, System.DateTime fecInicio, System.DateTime fecFin, int indicadorDatos, string usuario, int option, int importarSP7);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoOportunidadServicio/ReprocesarCalculoTodos", ReplyAction="www.coes.org.pe/ICostoOportunidadServicio/ReprocesarCalculoTodosResponse")]
        void ReprocesarCalculoTodos(System.DateTime fechaIni, System.DateTime fechaFin, string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoOportunidadServicio/ReprocesarCalculoTodos", ReplyAction="www.coes.org.pe/ICostoOportunidadServicio/ReprocesarCalculoTodosResponse")]
        System.Threading.Tasks.Task ReprocesarCalculoTodosAsync(System.DateTime fechaIni, System.DateTime fechaFin, string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoOportunidadServicio/CalculoFactoresUtilizacion", ReplyAction="www.coes.org.pe/ICostoOportunidadServicio/CalculoFactoresUtilizacionResponse")]
        void CalculoFactoresUtilizacion();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoOportunidadServicio/CalculoFactoresUtilizacion", ReplyAction="www.coes.org.pe/ICostoOportunidadServicio/CalculoFactoresUtilizacionResponse")]
        System.Threading.Tasks.Task CalculoFactoresUtilizacionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoOportunidadServicio/EjecutarProcesoDiario", ReplyAction="www.coes.org.pe/ICostoOportunidadServicio/EjecutarProcesoDiarioResponse")]
        int EjecutarProcesoDiario(System.DateTime fecha, string tipo, string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoOportunidadServicio/EjecutarProcesoDiario", ReplyAction="www.coes.org.pe/ICostoOportunidadServicio/EjecutarProcesoDiarioResponse")]
        System.Threading.Tasks.Task<int> EjecutarProcesoDiarioAsync(System.DateTime fecha, string tipo, string usuario);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICostoOportunidadServicioChannel : COES.Job.CostoOportunidad.ServiceReferenceCostoOportunidad.ICostoOportunidadServicio, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CostoOportunidadServicioClient : System.ServiceModel.ClientBase<COES.Job.CostoOportunidad.ServiceReferenceCostoOportunidad.ICostoOportunidadServicio>, COES.Job.CostoOportunidad.ServiceReferenceCostoOportunidad.ICostoOportunidadServicio {
        
        public CostoOportunidadServicioClient() {
        }
        
        public CostoOportunidadServicioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CostoOportunidadServicioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CostoOportunidadServicioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CostoOportunidadServicioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ImportarTodoSeñalesSP7(int tipoImportacion, System.Nullable<System.DateTime> FechaDiario, int copercodi, int covercodi, string usuario, string tipo) {
            return base.Channel.ImportarTodoSeñalesSP7(tipoImportacion, FechaDiario, copercodi, covercodi, usuario, tipo);
        }
        
        public System.Threading.Tasks.Task<bool> ImportarTodoSeñalesSP7Async(int tipoImportacion, System.Nullable<System.DateTime> FechaDiario, int copercodi, int covercodi, string usuario, string tipo) {
            return base.Channel.ImportarTodoSeñalesSP7Async(tipoImportacion, FechaDiario, copercodi, covercodi, usuario, tipo);
        }
        
        public int ProcesarCalculo(int idVersion, System.DateTime fechaInicio, System.DateTime fechaFin, string usuario, int option) {
            return base.Channel.ProcesarCalculo(idVersion, fechaInicio, fechaFin, usuario, option);
        }
        
        public System.Threading.Tasks.Task<int> ProcesarCalculoAsync(int idVersion, System.DateTime fechaInicio, System.DateTime fechaFin, string usuario, int option) {
            return base.Channel.ProcesarCalculoAsync(idVersion, fechaInicio, fechaFin, usuario, option);
        }
        
        public int EjecutarReproceso(int idVersion, int indicador, System.DateTime fecInicio, System.DateTime fecFin, int indicadorDatos, string usuario, int option, int importarSP7) {
            return base.Channel.EjecutarReproceso(idVersion, indicador, fecInicio, fecFin, indicadorDatos, usuario, option, importarSP7);
        }
        
        public System.Threading.Tasks.Task<int> EjecutarReprocesoAsync(int idVersion, int indicador, System.DateTime fecInicio, System.DateTime fecFin, int indicadorDatos, string usuario, int option, int importarSP7) {
            return base.Channel.EjecutarReprocesoAsync(idVersion, indicador, fecInicio, fecFin, indicadorDatos, usuario, option, importarSP7);
        }
        
        public void ReprocesarCalculoTodos(System.DateTime fechaIni, System.DateTime fechaFin, string usuario) {
            base.Channel.ReprocesarCalculoTodos(fechaIni, fechaFin, usuario);
        }
        
        public System.Threading.Tasks.Task ReprocesarCalculoTodosAsync(System.DateTime fechaIni, System.DateTime fechaFin, string usuario) {
            return base.Channel.ReprocesarCalculoTodosAsync(fechaIni, fechaFin, usuario);
        }
        
        public void CalculoFactoresUtilizacion() {
            base.Channel.CalculoFactoresUtilizacion();
        }
        
        public System.Threading.Tasks.Task CalculoFactoresUtilizacionAsync() {
            return base.Channel.CalculoFactoresUtilizacionAsync();
        }
        
        public int EjecutarProcesoDiario(System.DateTime fecha, string tipo, string usuario) {
            return base.Channel.EjecutarProcesoDiario(fecha, tipo, usuario);
        }
        
        public System.Threading.Tasks.Task<int> EjecutarProcesoDiarioAsync(System.DateTime fecha, string tipo, string usuario) {
            return base.Channel.EjecutarProcesoDiarioAsync(fecha, tipo, usuario);
        }
    }
}
