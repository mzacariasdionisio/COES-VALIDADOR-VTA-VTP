@model COES.MVC.Extranet.Areas.Transferencias.Models.CodigoRetiroModel
@{
    string sAccion = ViewData["sAccion"].ToString();
    string sTitulo = ViewData["sTitulo"].ToString();
    var EMPRNOMB = TempData["EMPRNOMB"];
    var CLICODI2 = (COES.MVC.Extranet.Areas.Transferencias.Models.EmpresaModel)TempData["CLICODI2"];
    var BARRCODI2 = (COES.MVC.Extranet.Areas.Transferencias.Models.BarraModel)TempData["BARRCODI2"];   
    var TIPOCONTCODI2 = (IEnumerable<SelectListItem>)TempData["TIPOCONTCODI2"];
    var TIPOUSUACODI2 = (IEnumerable<SelectListItem>)TempData["TIPOUSUACODI2"];
}
<link href="~/Areas/Transferencias/Content/Css/Transferencia.css" rel="stylesheet" />
<link href="~/Areas/Transferencias/Content/Css/Validate.css" rel="stylesheet" />
<link href="~/Content/Css/multiselect.css" rel="stylesheet" />
<script src="~/Areas/Transferencias/Content/Scripts/codigoretiroex.js"></script>
<script src="~/Content/Scripts/multiselect.js"></script>

@using (Html.BeginForm("Save", "codigoretiro", FormMethod.Post, new { id = "frmCodigoRetiro", @class = "cmxform" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Entidad.SoliCodiRetiCodi)
    <div class="ast" style="border-style: double; border-width: 1px; border-color: #2980B9; border-radius: 5px;">
        <div class="form-title">@EMPRNOMB: @sTitulo</div>
        <div class="content-hijo" style="padding-top:8px;">
        <table cellspacing="2" cellpadding="5">
            @if (Model.sError != "")
            {
            <tr>
                <td colspan="4">
                <div class="editor-label" style="color:red;">@Model.sError</div>
                </td>
            </tr>
            }
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Entidad.CliCodi, "Cliente")
                        (*)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        <select id="CLICODI2" name="Entidad.CLICODI" multiple="multiple">
                            @foreach (var item in @CLICODI2.ListaEmpresas)
                                    {
                                    <option value="@item.EmprCodi">@item.EmprNombre </option>
                                    }
                        </select>

                    </div>
                </td>

                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Entidad.BarrCodi, "Barra Transferencia")
                        (*)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        <select id="BARRCODI2" name="Entidad.BARRCODI" multiple="multiple">
                            @foreach (var item in @BARRCODI2.ListaBarras)
                                    {
                                    <option value="@item.BarrCodi">@item.BarrNombBarrTran </option>
                                    }
                        </select>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Solicodiretifechainicio, "Fecha de Inicio ")
                        (*)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Solicodiretifechainicio, "{0:dd/MM/yyyy}", new { @class = "txtFecha" })
                        @Html.ValidationMessageFor(model => model.Solicodiretifechainicio)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Solicodiretifechafin, "Fecha Fin")
                        (*)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Solicodiretifechafin, "{0:dd/MM/yyyy}", new { @class = "txtFecha" })
                        @Html.ValidationMessageFor(model => model.Solicodiretifechafin)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Entidad.TipoContCodi, "Tipo de Contrato")
                        (*)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DropDownList("Entidad.TIPOCONTCODI", @TIPOCONTCODI2, "--Seleccione--")
                        @Html.ValidationMessageFor(model => model.Entidad.TipoContCodi)
                    </div>
                </td>

                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Entidad.TipoUsuaCodi, "Tipo de Usuario")
                        (*)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.DropDownList("Entidad.TIPOUSUACODI", @TIPOUSUACODI2, "--Seleccione--")
                        @Html.ValidationMessageFor(model => model.Entidad.TipoUsuaCodi)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Entidad.SoliCodiRetiDescripcion, "Descripción")
                        (*)
                    </div>
                </td>
                <td colspan="3">
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.Entidad.SoliCodiRetiDescripcion, new { cols = 80, @rows = 2, style = "background-color: #f2f4f3; border: 1px solid #cbd3cf; border-radius: 5px; color: #4876aa; font: 12px arial,sans-serif; text-indent: 8px; width: 650px; height: 40px;" })
                        @Html.ValidationMessageFor(model => model.Entidad.SoliCodiRetiDescripcion)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Entidad.SoliCodiRetiDetalleAmplio, "Mayor Detalle")
                    </div>
                </td>
                <td colspan="3">
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.Entidad.SoliCodiRetiDetalleAmplio, new { cols = 80, @rows = 2, style = "background-color: #f2f4f3; border: 1px solid #cbd3cf; border-radius: 5px; color: #4876aa; font: 12px arial,sans-serif; text-indent: 8px; width: 650px; height: 40px;" })
                        @Html.ValidationMessageFor(model => model.Entidad.SoliCodiRetiDetalleAmplio)
                    </div>
                </td>
            </tr>
            <tr>
                <td><img src="~/Areas/Transferencias/Content/Images/trans.gif" width="120" height="1" /></td>
                <td colspan="3">&nbsp;</td>
            </tr>
            <tr>
                <td colspan="4" align="center">
                    <input type="button" value="Retornar" onclick="location.href='@Url.Action("Index","codigoretiro")'" alt="Retornar" title="Retornar" />
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <input type="submit" value="@sAccion" alt="@sAccion" title="@sAccion" />
                </td>
            </tr>
            <tr><td colspan="4">Nota(*): Campos Requeridos</td></tr>
        </table>
        </div>
    </div>
}
<script src="~/Areas/Transferencias/Content/Scripts/jquery.validate.js"></script>
<script>
    function FormatFecha(sFecha) {   //DD/MM/AAAA
        var sDia = sFecha.substring(0, 2);
        var sMes = sFecha.substring(3, 5);
        var sAnio = sFecha.substring(6, 10);
        return new Date(sAnio, sMes, sDia);
    }

    jQuery.validator.addMethod("MasGrandeQue", function (value, element, params) {
        //value: (val)fechafinal / params: (tag)fechainicial
        if (!/Invalid|NaN/.test(FormatFecha(value))) {
            //Si la fechafinal no es nulo compara
            return FormatFecha(value) >= FormatFecha($(params).val());
        }
        //caso contrario si la fechafinal es vacia, devuelve true
        return !isNaN(value);
    }, '<br>Debe ser mayor que la fecha de Inicio de Operación.');
    
    $("#frmCodigoRetiro").validate({
        rules: {
            "Entidad.CLICODI": {
                required: true,
            },
            "Entidad.BARRCODI": {
                required: true,
            },
            Solicodiretifechainicio: {
                required: true,
            },
            Solicodiretifechafin: {
                required: true,
                MasGrandeQue: "#Solicodiretifechainicio"
            },       
            "Entidad.TIPOCONTCODI": {
                required: true,
            },
            "Entidad.TIPOUSUACODI": {
                required: true,
            },
            "Entidad.SoliCodiRetiDescripcion": {
                required: true,
                maxlength: 500
            },
            "Entidad.SoliCodiRetiDetalleAmplio": {
                maxlength: 500
            }
        }
    });

</script>