@model COES.MVC.Intranet.Areas.AporteIntegrantes.Models.AjusteEmpresaModel
@{
    string sAccion = ViewData["sAccion"].ToString();
    string sTitulo = ViewData["sTitulo"].ToString();
    var sSelected = "";
}

<link href="~/Areas/AporteIntegrantes/Content/Css/transferencia.css" rel="stylesheet" />
<script src="~/Areas/AporteIntegrantes/Content/Scripts/AjusteEmpresa.js"></script>

@using (Html.BeginForm("Save", "AjusteEmpresa", FormMethod.Post, new { id = "frmAjusteEmpresa", @class = "cmxform" }))
{
    @Html.AntiForgeryToken()
    <div class="ast">
        <div class="form-title">
            <div class="content-titulo">@Model.EntidadPresupuesto.Caiprsnombre / @Model.EntidadAjuste.Caiajnombre - @sTitulo</div>
            <div class="content-botonera">
                @if (Model.bGrabar)
                {
                    <input type="submit" value="@sAccion" alt="@sAccion" title="@sAccion" />
                }
                <input type="button" value="Retornar" onclick="location.href='@Url.Action("Index", "AjusteEmpresa", new { caiajcodi = Model.EntidadAjuste.Caiajcodi, caiajetipoinfo = Model.EntidadAjusteEmpresa.Caiajetipoinfo })'" alt="Retornar" title="Retornar" />
            </div>
        </div>
        <div style="padding:20px;width:500px;">
            <input type="hidden" value="" id="EntidadAjuste_Caiajcodi" />
            @Html.HiddenFor(model => model.EntidadAjusteEmpresa.Caiajecodi)
            @Html.HiddenFor(model => model.EntidadAjusteEmpresa.Caiajcodi)
            @Html.HiddenFor(model => model.EntidadAjusteEmpresa.Caiajetipoinfo)
            <table cellspacing="2" cellpadding="5">
                @if (Model.sError != "")
                {
                    <tr>
                        <td colspan="2">
                            <div class="editor-label" style="color:red;">
                                @Model.sError
                            </div>
                        </td>
                    </tr>
                }
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.EntidadAjusteEmpresa.Emprcodi, "Empresa")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            <select name="EntidadAjusteEmpresa.Emprcodi" id="EntidadAjusteEmpresa_Emprcodi">
                                <option value="">--Seleccione--</option>
                                @foreach (var item in Model.ListaEmpresa)
                                {
                                    sSelected = "";
                                    if (item.EmprCodi == Model.EntidadAjusteEmpresa.Emprcodi) { sSelected = "selected"; }
                                    <option value="@item.EmprCodi" @sSelected>@item.EmprNombre</option>
                                }
                            </select>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                                @Html.LabelFor(model => model.EntidadAjusteEmpresa.Ptomedicodi, "Pto Medición")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            <select name="EntidadAjusteEmpresa.Ptomedicodi" id="EntidadAjusteEmpresa_Ptomedicodi">
                                @foreach (var item in Model.ListaPtoMedicion)
                                {
                                    sSelected = "";
                                    if (item.Ptomedicodi == Model.EntidadAjusteEmpresa.Ptomedicodi) { sSelected = "selected"; }
                                    <option value="@item.Ptomedicodi" @sSelected>@item.Ptomedielenomb</option>
                                }
                            </select>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.EntidadAjusteEmpresa.Caiajereteneejeini, "Ejecutada Inicio")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Caiajereteneejeini, "{0:dd/MM/yyyy}", new { @class = "txtFecha" })
                            @Html.ValidationMessageFor(model => model.Caiajereteneejeini)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.EntidadAjusteEmpresa.Caiajereteneejefin, "Ejecutada Fin")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Caiajereteneejefin, "{0:dd/MM/yyyy}", new { @class = "txtFecha" })
                            @Html.ValidationMessageFor(model => model.Caiajereteneejefin)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.EntidadAjusteEmpresa.Caiajeretenepryaini, "Proyectado A - Inicio")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Caiajeretenepryaini, "{0:dd/MM/yyyy}", new { @class = "txtFecha" })
                            @Html.ValidationMessageFor(model => model.Caiajeretenepryaini)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.EntidadAjusteEmpresa.Caiajeretenepryafin, "Proyectado A - Fin")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Caiajeretenepryafin, "{0:dd/MM/yyyy}", new { @class = "txtFecha" })
                            @Html.ValidationMessageFor(model => model.Caiajeretenepryafin)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.EntidadAjusteEmpresa.Caiajereteneprybini, "Proyectado A + 1 - Inicio")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Caiajereteneprybini, "{0:dd/MM/yyyy}", new { @class = "txtFecha" })
                            @Html.ValidationMessageFor(model => model.Caiajereteneprybini)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.EntidadAjusteEmpresa.Caiajereteneprybfin, "Proyectado A + 1 - Fin")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Caiajereteneprybfin, "{0:dd/MM/yyyy}", new { @class = "txtFecha" })
                            @Html.ValidationMessageFor(model => model.Caiajereteneprybfin)
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
}
<script src="~/Content/Scripts/jquery.validate.js"></script>
<script>
    function FormatFecha(sFecha) {   //DD/MM/AAAA
        if (sFecha == "") return false;
        var sDia = sFecha.substring(0, 2);
        var sMes = sFecha.substring(3, 5);
        var sAnio = sFecha.substring(6, 10);
        return new Date(sAnio, sMes, sDia);
    }

    jQuery.validator.addMethod("MasGrandeQue", function (value, element, params) {
        //value: (val)fechafinal / params: (tag)fechainicial
        if (FormatFecha(value)) {
            //Si la fechafinal no es nulo compara
            return FormatFecha(value) >= FormatFecha($(params).val());
        }
        //caso contrario si la fechafinal es vacia, devuelve true
        return !isNaN(value);
    }, '<br>Debe ser mayor que la fecha de Inicio de Operación.');

    $("#frmAjusteEmpresa").validate({
        rules: {
            "EntidadAjusteEmpresa_Emprcodi": {
                required: true
            },
            "EntidadAjusteEmpresa_Ptomedicodi": {
                required: true,
            },
            Caiajereteneejefin: {
                MasGrandeQue: "#Caiajereteneejeini"
            },
            Caiajeretenepryafin: {
                MasGrandeQue: "#Caiajeretenepryaini"
            },
            Caiajereteneprybfin: {
                MasGrandeQue: "#Caiajereteneprybini"
            },
            Caiajeingtrmejefin: {
                MasGrandeQue: "#Caiajeingtrmejeini"
            },
            Caiajeingtrmpryafin: {
                MasGrandeQue: "#Caiajeingtrmpryaini"
            },
            Caiajeingtrmprybfin: {
                MasGrandeQue: "#Caiajeingtrmprybini"
            }
        }
    });
</script>