@model COES.MVC.Intranet.Areas.IntercambioOsinergmin.Models.Maestros.DetalleEntidadModel

@{
    ViewBag.TitleModal = "Edición de registro para el maestro " + Model.EntidadDescripcion;
}

<h3>@ViewBag.TitleModal</h3>

<div id="mensajeRegistro"></div>

@Html.BeginForm("Asignar", "Sincronizaciones", FormMethod.Post, new {enctype = "multipart/form-data", id = "asignarForm"}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "action-error" })

    <div class="action-message">Por favor ingrese el id equivalente</div>

    @Html.LabelFor(model => model.Codigo)
    <div>
    @switch (Model.EntidadCodigo)
    {
        case 16:
            @Html.EditorFor(model => model.Codigo, new { @readonly = "readonly" })
            break;
        default:
            @Html.EditorFor(model => model.Codigo)
            @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "action-error" })
            break;
    }
    </div>
    
    @Html.LabelFor(model => model.CodigoOsinergmin)
    <div>
        @Html.EditorFor(model => model.CodigoOsinergmin)
        @Html.ValidationMessageFor(model => model.CodigoOsinergmin, "", new {@class = "action-error"})
    </div>
    
    @Html.LabelFor(model => model.Descripcion)
    <div>
        @Html.EditorFor(model => model.Descripcion, new { @readonly = "readonly" })
    </div>
    
    <div>
        @Html.HiddenFor(model => model.EntidadCodigo, new { @readonly = "readonly" }))
        @Html.HiddenFor(model => model.EntidadDescripcion, new {@readonly = "readonly"}))
    </div>

    <button role="button" id="asignar">Asignar</button>
    <button role="button" id="cancelar">Cancelar</button>
}