@model COES.MVC.Intranet.Areas.TransfPotencia.Models.RecalculoPotenciaModel
@{
    string sAccion = ViewData["sAccion"].ToString();
    string sTitulo = ViewData["sTitulo"].ToString();
    string sSelected = "";
}
<link href="~/Areas/TransfPotencia/Content/Css/Transferencia.css" rel="stylesheet" />
<script src="~/Areas/TransfPotencia/Content/Scripts/recalculopotenciaform.js"></script>
@using (Html.BeginForm("Save", "recalculopotencia", FormMethod.Post, new { id = "frmFormulario", @class = "cmxform" }))
{
    @Html.AntiForgeryToken()
    <div class="ast">
        <div class="form-title">
            <div class="content-titulo">@sTitulo</div>
            <div class="content-botonera">
                @if (Model.bGrabar)
                {
                    <input id="btnAccion" type="submit" value="@sAccion" alt="@sAccion" title="@sAccion" />
                }
                <input type="button" value="Retornar" onclick="location.href='@Url.Action("Index", "recalculopotencia")'" alt="Retornar" title="Retornar" />
            </div>
        </div>
        <div style="padding:20px; width:700px;">
            @Html.HiddenFor(model => model.Entidad.Recpotcodi)
            @if (Model.sError != "" && Model.sError != null)
            {
                <div id="mensaje" class="action-message" style="margin:0; margin-bottom:10px">@Model.sError</div>

            }
        <table cellspacing="2" cellpadding="5">
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Pericodi, "Mes de Valorización") (*)</div></td>
                @if (Model.Entidad.Recpotcodi > 0)
                {@Html.HiddenFor(model => model.Entidad.Pericodi)
                <td>
                    <div class="editor-field">
                        <select id="Perinombre" name="Perinombre" disabled>
                            @foreach (var item in Model.ListaPeriodos)
                            {
                                sSelected = "";
                                if (@item.PeriCodi == Model.Entidad.Pericodi)
                                { sSelected = "selected"; }
                                <option value="@item.PeriCodi" @sSelected>@item.PeriNombre</option>
                            }
                        </select>
                    </div>
                </td>
            }
            else
            {
                <td>
                    <div class="editor-field">
                        <select id="Entidad_Pericodi" name="Entidad.Pericodi">
                            @foreach (var item in Model.ListaPeriodos)
                            {
                                sSelected = "";
                                if (@item.PeriCodi == Model.Entidad.Pericodi)
                                { sSelected = "selected"; }
                                <option value="@item.PeriCodi" @sSelected>@item.PeriNombre</option>
                            }
                        </select>
                    </div>
                </td>
            }
            </tr>
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Recpotnombre, "Nombre de la versión") (*)</div></td>
                <td><div class="editor-field">@Html.TextBoxFor(model => model.Entidad.Recpotnombre, new { size = 50, maxLength = 50 })</div></td>
            </tr>
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Recpotinfovtp, "Informe VTP") (*)</div></td>
                <td><div class="editor-field">@Html.TextBoxFor(model => model.Entidad.Recpotinfovtp, new { size = 50, maxLength = 50 })</div></td>
            </tr>
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Recpotfactincecontrantacion, "Factor de incentivo a la contratación") (*)</div></td>
                <td><div class="editor-field">@Html.TextBoxFor(model => model.Entidad.Recpotfactincecontrantacion, new { size = 10, maxLength = 10 })</div></td>
            </tr>
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Recpotfactincedespacho, "Factor de incentivo al despacho") (*)</div></td>
                <td><div class="editor-field">@Html.TextBoxFor(model => model.Entidad.Recpotfactincedespacho, new { size = 10, maxLength = 10 })</div></td>
            </tr>
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Recpotmaxidemamensual, "Máxima demanda mensual") (*)</div></td>
                <td><div class="editor-field">@Html.TextBoxFor(model => model.Entidad.Recpotmaxidemamensual, new { size = 10, maxLength = 10 })</div></td>
            </tr>
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Recpotinterpuntames, "Intervalo de punta del mes") (*)</div></td>
                <td><div class="editor-field">@Html.TextBoxFor(model => model.Recpotinterpuntames, "{0:dd/MM/yyyy}", new { @class = "txtFecha c-time" })</div></td>
            </tr>
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Recpotpreciopoteppm, "Precio de potencia PPM S/. /kW-mes") (*)</div></td>
                <td><div class="editor-field">@Html.TextBoxFor(model => model.Entidad.Recpotpreciopoteppm, new { size = 10, maxLength = 10 })</div></td>
            </tr>
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Recpotpreciopeajeppm, "Precio de Peaje Unitario S/. /kW-mes") (*)</div></td>
                <td><div class="editor-field">@Html.TextBoxFor(model => model.Entidad.Recpotpreciopeajeppm, new { size = 10, maxLength = 10 })</div></td>
            </tr>
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Recpotpreciocostracionamiento, "Costo de racionamiento S/. /Kwh") (*)</div></td>
                <td><div class="editor-field">@Html.TextBoxFor(model => model.Entidad.Recpotpreciocostracionamiento, new { size = 10, maxLength = 10 })</div></td>
            </tr>
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Recpotpreciodemaservauxiliares, "Demanda de servicios auxiliares kW") (*)</div></td>
                <td><div class="editor-field">@Html.TextBoxFor(model => model.Entidad.Recpotpreciodemaservauxiliares, new { size = 10, maxLength = 10 })</div></td>
            </tr>
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Recpotconsumidademanda, "Potencia consumida por demanda kW")  (*)</div></td>
                <td><div class="editor-label">@Html.TextBoxFor(model => model.Entidad.Recpotconsumidademanda, new { size = 10, maxLength = 10 })</div></td>
            </tr>
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Recpotfechalimite, "Fecha Limite") (*)</div></td>
                <td><div class="editor-field">@Html.TextBoxFor(model => model.Recpotfechalimite, "{0:dd/MM/yyyy }", new { @class = "txtFecha s-time" })</div></td>
            </tr>
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Recpothoralimite, "Hora Limite") (*)</div></td>
                <td><div class="editor-field">@Html.EditorFor(model => model.Entidad.Recpothoralimite)</div></td>
            </tr>
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Recpotcuadro1, "Cuadro 1")</div></td>
                <td><div class="editor-field">@Html.EditorFor(model => model.Entidad.Recpotcuadro1)</div></td>
            </tr>
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Recpotnota1, "Nota 1")</div></td>
                <td><div class="editor-field">@Html.TextAreaFor(model => model.Entidad.Recpotnota1, new { cols = 80, @rows = 5, style = "background-color: #f2f4f3; border: 1px solid #cbd3cf; border-radius: 5px; color: #4876aa; font: 12px arial,sans-serif; text-indent: 8px; width: 400px; height: 150px;" })</div></td>
            </tr>
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Recpotcomegeneral, "Comentario general")</div></td>
                <td><div class="editor-field">@Html.TextAreaFor(model => model.Entidad.Recpotcomegeneral, new { cols = 80, @rows = 2, style = "background-color: #f8f8f8; border: 1px solid #cbd3cf; border-radius: 5px; color: #4876aa; font: 12px arial,sans-serif; text-indent: 8px; width: 300px; height: 40px;" })</div></td>
            </tr>
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Recpotestado, "Estado")</div></td>
                <td>
                    <div class="editor-field">
                        <label>@Html.RadioButtonFor(model => model.Entidad.Recpotestado, "Abierto")En proceso</label>
                        <label>@Html.RadioButtonFor(model => model.Entidad.Recpotestado, "Publicar")Publicación Preliminar</label>
                        <label>@Html.RadioButtonFor(model => model.Entidad.Recpotestado, "Cerrado")Cerrado</label>
                    </div>
                </td>
            </tr>
            <tr>
                <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Recpotcargapfr, "Cargar información de PFR")</div></td>
                <td>
                    <div class="editor-field">
                        <label>@Html.RadioButtonFor(model => model.Entidad.Recpotcargapfr, 1, new { @class = "flagSi" })SI</label>
                        <label>@Html.RadioButtonFor(model => model.Entidad.Recpotcargapfr, 0, new { @class = "flagNo" })NO</label>
                    </div>
                </td>
            </tr>

            @if (Model.Entidad.Recpotcodi > 0)
            {
                <tr>
                    <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Recacodi, "Recalculo VEA")</div></td>
                    <td>
                        <div class="editor-field">
                            <select id="Entidad_Recacodi" name="Entidad.Recacodi">
                                <option value="0">--Seleccione--</option>
                                @foreach (var item in Model.ListaRecalculo)
                                {
                                    sSelected = "";
                                    if (@item.RecaCodi == Model.Entidad.Recacodi)
                                    { sSelected = "selected"; }
                                    <option value="@item.RecaCodi" @sSelected>@item.RecaNombre</option>
                                }
                            </select>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td><div class="editor-label">@Html.LabelFor(model => model.Entidad.Pericodidestino, "Incluir en el periodo")</div></td>
                    <td>
                        <div class="editor-field">
                            <select id="Entidad_Pericodidestino" name="Entidad.Pericodidestino">
                                <option value="0">--Seleccione--</option>
                                @foreach (var item in Model.ListaPeriodos)
                                {
                                    sSelected = "";
                                    if (@item.PeriCodi == Model.Entidad.Pericodidestino)
                                    { sSelected = "selected"; }
                                    <option value="@item.PeriCodi" @sSelected>@item.PeriNombre</option>
                                }
                            </select>
                        </div>
                    </td>
                </tr>
            }
            <tr>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </tr>
            <tr><td colspan="2">Nota(*): Información obligatoria</td></tr>
        </table>
        </div>


            
   </div>
}
<link href="~/Content/Css/validacion.css" rel="stylesheet" />
<script src="~/Content/Scripts/jquery.validate.js"></script>
<script src="~/Content/Scripts/inputmaskmin.js"></script> @*Para validar fecha hora: inputmask*@
<script>
    var constantePeriodo = 79;
    $(document).ready(function () {
        $('.txtFecha.c-time').Zebra_DatePicker({
            format: 'd/m/Y H:i:s'
        });
        $('.txtFecha.s-time').Zebra_DatePicker();

        /*
        $('#Recpotinterpuntames').inputmask({
            mask: "1/2/y h:s:s",
            placeholder: "dd/mm/yyyy 00:00:00",
            alias: "datetime",
            hourFormat: "24"
        });*/

        $('#Recpotfechalimite').inputmask({
            mask: "1/2/y",
            placeholder: "dd/mm/yyyy",
            alias: "datetime",
            hourFormat: "24"
        });

        if ($('#btnAccion').val() ==  "Insertar") {
            validarCheck();
        }

        $('#Entidad_Pericodi').change(function () {
            validarCheck();
        });
    });

    validarCheck = function () {
        if ($('#Entidad_Pericodi').val() >= constantePeriodo) {
            $('input.flagNo').prop("checked", false);
            $('input.flagSi').prop("checked", true);
        }
        else {
            $('input.flagSi').prop("checked", false);
            $('input.flagNo').prop("checked", true);
        }
    };

    $("#frmFormulario").validate({
        rules: {
            "Entidad.Recpotnombre": {
                required: true
            },
            "Entidad.Recpotinfovtp": {
                required: true
            },
            "Entidad.Recpotfactincecontrantacion": {
                required: true,
                number: true
            },
            "Entidad.Recpotfactincedespacho": {
                required: true,
                number: true
            },
            "Entidad.Recpotmaxidemamensual": {
                required: true,
                number: true
            },
            Recpotinterpuntames: {
                required: true
            },
            "Entidad.Recpotpreciopoteppm": {
                required: true,
                number: true
            },
            "Entidad.Recpotpreciocostracionamiento": {
                required: true,
                number: true
            },
            "Entidad.Recpotpreciodemaservauxiliares": {
                required: true,
                number: true
            },
            "Entidad.Recpotfechalimite": {
                required: true,
                number: true
            },
            Recpotinterpuntames: {
                required: true
            },
            "Entidad.Recpothoralimite": {
                required: true,
                maxlength: 5
            },
            "Entidad.Recacuadro1": {
                maxlength: 250
            },
            "Entidad.Recanota1": {
                maxlength: 2000
            },
            "Entidad.Recpotcomegeneral": {
                maxlength: 250
            }
        }
    });
</script>