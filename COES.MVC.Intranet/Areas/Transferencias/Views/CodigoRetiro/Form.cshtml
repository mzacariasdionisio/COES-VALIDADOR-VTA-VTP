@model COES.MVC.Intranet.Areas.Transferencias.Models.CodigoRetiroModel
@{
    string sAccion = ViewData["sAccion"].ToString();
    string sTitulo = ViewData["sTitulo"].ToString();
    var CLICODI2 = (IEnumerable<SelectListItem>)TempData["CLICODI2"];
    var BARRCODI2 = (IEnumerable<SelectListItem>)TempData["BARRCODI2"];
    var TIPOCONTCODI2 = (IEnumerable<SelectListItem>)TempData["TIPOCONTCODI2"];
    var TIPOUSUACODI2 = (IEnumerable<SelectListItem>)TempData["TIPOUSUACODI2"];
}
<link href="~/Areas/Transferencias/Content/Css/Transferencia.css" rel="stylesheet" />
<link href="~/Areas/Transferencias/Content/Css/Validate.css" rel="stylesheet" />
<script src="~/Areas/Transferencias/Content/Scripts/codigoretiro.js"></script>
@using (Html.BeginForm("Save", "codigoretiro", FormMethod.Post, new { id = "frmCodigoRetiro", @class = "cmxform" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="hfNroPagina" name="NroPagina" value="1" />
    <div class="ast">
        <div class="form-title">
            <div class="content-titulo">@sTitulo</div>
            <div class="content-botonera">
                @if (Model.bGrabar)
                {
                    <input type="submit" value="@sAccion" alt="@sAccion" title="@sAccion" />
                }
                <input type="button" value="Retornar" onclick="location.href='@Url.Action("Index","codigoretiro")'" alt="Retornar" title="Retornar" />
            </div>
        </div>
        <div style="padding:20px; width:500px;">
            @Html.HiddenFor(model => model.Entidad.SoliCodiRetiCodi)
            @Html.HiddenFor(model => model.Entidad.EmprCodi)
            @Html.HiddenFor(model => model.Entidad.BarrCodi)
            @Html.HiddenFor(model => model.Entidad.CliCodi)
            @Html.HiddenFor(model => model.Entidad.TipoContCodi)
            @Html.HiddenFor(model => model.Entidad.TipoUsuaCodi)
            @Html.HiddenFor(model => model.Entidad.SoliCodiRetiObservacion)
            @Html.HiddenFor(model => model.Entidad.UsuaCodi)
            @Html.HiddenFor(model => model.Entidad.SoliCodiRetiFecIns)
            @Html.HiddenFor(model => model.Entidad.SoliCodiRetiFechaRegistro)
            @Html.HiddenFor(model => model.Entidad.SoliCodiretiFechaSolBaja)
            @Html.HiddenFor(model => model.Entidad.SoliCodiRetiFechaBaja)
            @Html.HiddenFor(model => model.Entidad.SoliCodiRetiFechaInicio)
            @Html.HiddenFor(model => model.Entidad.SoliCodiRetiFechaFin)
            <table cellspacing="2" cellpadding="5">
                @if (Model.sError != "")
                {
                    <tr>
                        <td colspan="2">
                            <div class="editor-label" style="color:red;">
                                @Model.sError
                            </div>
                        </td>
                    </tr>
                }
                <tr>
                    <td><img src="~/Areas/Transferencias/Content/Images/trans.gif" width="120" height="1" /></td>
                    <td colspan="3">&nbsp;</td>
                </tr>
                <tr>

                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Entidad.CliCodi, "Cliente")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.DropDownList("CLICODI", @CLICODI2, "--Seleccione--", new { @disabled = true })
                            @Html.ValidationMessageFor(model => model.Entidad.CliCodi)
                        </div>
                    </td>

                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Entidad.BarrCodi, "Barra de Transferencia")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.DropDownList("BARRCODI", @BARRCODI2, "--Seleccione--", new { @disabled = true })
                            @Html.ValidationMessageFor(model => model.Entidad.BarrCodi)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Solicodiretifechainicio, "Fecha de Inicio ")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Solicodiretifechainicio, "{0:dd/MM/yyyy}", new { @readonly = true, style = "background-color: #f8f8f8;" })
                            @Html.ValidationMessageFor(model => model.Solicodiretifechainicio)
                        </div>
                    </td>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Solicodiretifechafin, "Fecha Fin")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Solicodiretifechafin, "{0:dd/MM/yyyy}", new { @class = "txtFecha", style = "background-color: #DDDDDD;" })
                            @Html.ValidationMessageFor(model => model.Solicodiretifechafin)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Entidad.TipoContCodi, "Tipo de Contrato")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.DropDownList("TIPOCONTCODI", @TIPOCONTCODI2, "--Seleccione--", new { @disabled = true })
                            @Html.ValidationMessageFor(model => model.Entidad.TipoContCodi)
                        </div>
                    </td>

                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Entidad.TipoUsuaCodi, "Tipo de Usuario")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.DropDownList("TIPOUSUACODI", @TIPOUSUACODI2, "--Seleccione--", new { @disabled = true })
                            @Html.ValidationMessageFor(model => model.Entidad.TipoUsuaCodi)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Entidad.SoliCodiRetiDescripcion, "Descripción")
                        </div>
                    </td>
                    <td colspan="3">
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.Entidad.SoliCodiRetiDescripcion, new { cols = 80, @rows = 2, @readonly = true, style = "background-color: #f8f8f8; border: 1px solid #cbd3cf; border-radius: 5px; color: #4876aa; font: 12px arial,sans-serif; text-indent: 8px; width: 650px; height: 40px;" })
                            @Html.ValidationMessageFor(model => model.Entidad.SoliCodiRetiDescripcion)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Entidad.SoliCodiRetiDetalleAmplio, "Mayor Detalle")
                        </div>
                    </td>
                    <td colspan="3">
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.Entidad.SoliCodiRetiDetalleAmplio, new { cols = 80, @rows = 2, style = "background-color: #DDDDDD; border: 1px solid #cbd3cf; border-radius: 5px; color: #4876aa; font: 12px arial,sans-serif; text-indent: 8px; width: 650px; height: 40px;" })
                            @Html.ValidationMessageFor(model => model.Entidad.SoliCodiRetiDetalleAmplio)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Entidad.SoliCodiRetiCodigo, "Código de Retiro")
                            (*)
                        </div>
                    </td>
                    <td colspan="3">
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Entidad.SoliCodiRetiCodigo, new { style = "background-color: #DDDDDD;" })
                            @Html.ValidationMessageFor(model => model.Entidad.SoliCodiRetiCodigo)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td colspan="4">&nbsp;</td>
                </tr>
                <tr><td colspan="4">Nota(*): Información obligatoria</td></tr>
                </table>
            </div>
    
   </div>
}
<script src="~/Areas/Transferencias/Content/Scripts/jquery.validate.js"></script>
<script>
    function FormatFecha(sFecha) {   //DD/MM/AAAA
        if (sFecha == "") return false;
        var sDia = sFecha.substring(0, 2);
        var sMes = sFecha.substring(3, 5);
        var sAnio = sFecha.substring(6, 10);
        return new Date(sAnio, sMes, sDia);
    }

    jQuery.validator.addMethod("MasGrandeQue", function (value, element, params) {
        //value: (val)fechafinal / params: (tag)fechainicial
        if (FormatFecha(value)) {
            //Si la fechafinal no es nulo compara
            return FormatFecha(value) >= FormatFecha($(params).val());
        }
        //caso contrario si la fechafinal es vacia, devuelve true
        return !isNaN(value);
    }, '<br>Debe ser mayor que la fecha de Inicio de Operación.');

    $("#frmCodigoRetiro").validate({
        rules: {
            "Entidad.SoliCodiRetiCodigo": {
                required: true
            },
            "Entidad.SoliCodiRetiDetalleAmplio": {
                maxlength: 500
            },
            Solicodiretifechafin: {
                MasGrandeQue: "#Solicodiretifechainicio"
            }
        }
    });

    function mostrarPaginado()
    { }
</script>