@model COES.MVC.Intranet.Areas.Transferencias.Models.CompensacionModel
@{
    string sAccion = ViewData["sAccion"].ToString();
    string sTitulo = ViewData["sTitulo"].ToString();
    List<SelectListItem> listItems = new List<SelectListItem>();
    var PeriodoNombre = TempData["Periodonombre"].ToString();
    listItems.Add(new SelectListItem
         {
             Text = "Activo",
             Value = "ACT",
             Selected = true
         });
    listItems.Add(new SelectListItem
         {
             Text = "Inactivo",
             Value = "INA"
         });
}
<link href="~/Areas/Transferencias/Content/Css/Transferencia.css" rel="stylesheet" />
<link href="~/Areas/Transferencias/Content/Css/Validate.css" rel="stylesheet" />
@using (Html.BeginForm("Save", "compensacion", FormMethod.Post, new { id = "frmCompensacion", @class = "cmxform" }))
{
    @Html.AntiForgeryToken()
    <div class="ast">
        <div class="form-title">
            <div class="content-titulo">@sTitulo</div>
            <div class="content-botonera">
                @if (Model.bGrabar)
                {
                    <input type="submit" value="@sAccion" alt="@sAccion" title="@sAccion" />
                }
                <input type="button" value="Retornar" onclick="location.href='@Url.Action("Index", "compensacion")'" alt="Retornar" title="Retornar" />
            </div>
        </div>
        <div style="padding:20px; width:500px;">
            @Html.HiddenFor(model => model.Entidad.CabeCompCodi)
            @Html.HiddenFor(model => model.Entidad.CabeCompPeriCodi)
            <table cellspacing="2" cellpadding="5">
                @if (Model.sError != "")
                {
                    <tr>
                        <td colspan="2">
                            <div class="editor-label" style="color:red;">
                                @Model.sError
                            </div>
                        </td>
                    </tr>
                }
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Entidad.CabeCompPeriCodi, "Periodo")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.sError, new { @Value = PeriodoNombre, @readonly = "readonly" })
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Entidad.CabeCompNombre, "Nombre")
                            (*)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Entidad.CabeCompNombre)
                            @Html.ValidationMessageFor(model => model.Entidad.CabeCompNombre)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Entidad.CabeCompVer, "Ver")
                            (*)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            <label>@Html.RadioButtonFor(model => model.Entidad.CabeCompVer, "Si")Si</label>
                            <label>@Html.RadioButtonFor(model => model.Entidad.CabeCompVer, "No")No</label>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Entidad.CabeCompEstado, "Estado")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.DropDownList("Entidad.Cabecompestado", listItems)
                            @Html.ValidationMessageFor(model => model.Entidad.CabeCompEstado)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Entidad.CabeCompRentConge, "Es Renta por Congestión ?")
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            <label>@Html.RadioButtonFor(model => model.Entidad.CabeCompRentConge, "Si")Si</label>
                            <label>@Html.RadioButtonFor(model => model.Entidad.CabeCompRentConge, "No")No</label>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                </tr>
                <tr><td colspan="2">Nota(*): Información obligatoria</td></tr>
            </table>
        </div>

    </div>
}
<script src="~/Areas/Transferencias/Content/Scripts/jquery.validate.js"></script>
<script>
    $("#frmCompensacion").validate({
        rules: {
            "Entidad.CabeCompNombre": {
                required: true
            },
            "Entidad.CabeCompVer": {
                required: true,
            }
        }
    });
</script>
