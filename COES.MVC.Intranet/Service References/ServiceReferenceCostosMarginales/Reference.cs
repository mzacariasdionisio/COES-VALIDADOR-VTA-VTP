//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace COES.MVC.Intranet.ServiceReferenceCostosMarginales {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="www.coes.org.pe", ConfigurationName="ServiceReferenceCostosMarginales.ICostoMarginalServicio")]
    public interface ICostoMarginalServicio {
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoMarginalServicio/ListarCostosMarginales", ReplyAction="www.coes.org.pe/ICostoMarginalServicio/ListarCostosMarginalesResponse")]
        COES.Dominio.DTO.Transferencias.CostoMarginalDTO[] ListarCostosMarginales(int anio, int mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoMarginalServicio/ListarCostosMarginales", ReplyAction="www.coes.org.pe/ICostoMarginalServicio/ListarCostosMarginalesResponse")]
        System.Threading.Tasks.Task<COES.Dominio.DTO.Transferencias.CostoMarginalDTO[]> ListarCostosMarginalesAsync(int anio, int mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoMarginalServicio/EjecutarCostosMarginalesAlterno", ReplyAction="www.coes.org.pe/ICostoMarginalServicio/EjecutarCostosMarginalesAlternoResponse")]
        void EjecutarCostosMarginalesAlterno(System.DateTime fecha, int indicadorPSSE, bool reproceso, bool indicadorNCP, bool flagWeb, string rutaNCP, bool flagMD, int idEscenario, string usuario, string tipoEstimador, int tipo, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoMarginalServicio/EjecutarCostosMarginalesAlterno", ReplyAction="www.coes.org.pe/ICostoMarginalServicio/EjecutarCostosMarginalesAlternoResponse")]
        System.Threading.Tasks.Task EjecutarCostosMarginalesAlternoAsync(System.DateTime fecha, int indicadorPSSE, bool reproceso, bool indicadorNCP, bool flagWeb, string rutaNCP, bool flagMD, int idEscenario, string usuario, string tipoEstimador, int tipo, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoMarginalServicio/EjecutarCostosMarginales", ReplyAction="www.coes.org.pe/ICostoMarginalServicio/EjecutarCostosMarginalesResponse")]
        void EjecutarCostosMarginales(System.DateTime fecha, int indicadorPSSE, bool reproceso, bool indicadorNCP, bool flagWeb);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoMarginalServicio/EjecutarCostosMarginales", ReplyAction="www.coes.org.pe/ICostoMarginalServicio/EjecutarCostosMarginalesResponse")]
        System.Threading.Tasks.Task EjecutarCostosMarginalesAsync(System.DateTime fecha, int indicadorPSSE, bool reproceso, bool indicadorNCP, bool flagWeb);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoMarginalServicio/ValidacionProcesoCostosMarginales", ReplyAction="www.coes.org.pe/ICostoMarginalServicio/ValidacionProcesoCostosMarginalesResponse")]
        void ValidacionProcesoCostosMarginales(System.DateTime fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoMarginalServicio/ValidacionProcesoCostosMarginales", ReplyAction="www.coes.org.pe/ICostoMarginalServicio/ValidacionProcesoCostosMarginalesResponse")]
        System.Threading.Tasks.Task ValidacionProcesoCostosMarginalesAsync(System.DateTime fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoMarginalServicio/ObtenerAlertasCostosMarginales", ReplyAction="www.coes.org.pe/ICostoMarginalServicio/ObtenerAlertasCostosMarginalesResponse")]
        COES.Servicios.Aplicacion.CortoPlazo.Helper.ResultadoValidacion ObtenerAlertasCostosMarginales(System.DateTime fechaProceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoMarginalServicio/ObtenerAlertasCostosMarginales", ReplyAction="www.coes.org.pe/ICostoMarginalServicio/ObtenerAlertasCostosMarginalesResponse")]
        System.Threading.Tasks.Task<COES.Servicios.Aplicacion.CortoPlazo.Helper.ResultadoValidacion> ObtenerAlertasCostosMarginalesAsync(System.DateTime fechaProceso);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoMarginalServicio/EjecutarReprocesoMasivo", ReplyAction="www.coes.org.pe/ICostoMarginalServicio/EjecutarReprocesoMasivoResponse")]
        int EjecutarReprocesoMasivo(System.DateTime fechaInicio, System.DateTime fechaFin, string[] horas, bool flagMD, string usuario, string tipoEstimador, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoMarginalServicio/EjecutarReprocesoMasivo", ReplyAction="www.coes.org.pe/ICostoMarginalServicio/EjecutarReprocesoMasivoResponse")]
        System.Threading.Tasks.Task<int> EjecutarReprocesoMasivoAsync(System.DateTime fechaInicio, System.DateTime fechaFin, string[] horas, bool flagMD, string usuario, string tipoEstimador, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoMarginalServicio/EjecutarReprocesoMasivoModificado", ReplyAction="www.coes.org.pe/ICostoMarginalServicio/EjecutarReprocesoMasivoModificadoResponse")]
        int EjecutarReprocesoMasivoModificado(string[][] datos, string usuario, int vesion);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoMarginalServicio/EjecutarReprocesoMasivoModificado", ReplyAction="www.coes.org.pe/ICostoMarginalServicio/EjecutarReprocesoMasivoModificadoResponse")]
        System.Threading.Tasks.Task<int> EjecutarReprocesoMasivoModificadoAsync(string[][] datos, string usuario, int vesion);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoMarginalServicio/EjecutarReprocesoTIE", ReplyAction="www.coes.org.pe/ICostoMarginalServicio/EjecutarReprocesoTIEResponse")]
        int EjecutarReprocesoTIE(string[][] datos, string usuario, int barra, System.DateTime fechaProceso, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoMarginalServicio/EjecutarReprocesoTIE", ReplyAction="www.coes.org.pe/ICostoMarginalServicio/EjecutarReprocesoTIEResponse")]
        System.Threading.Tasks.Task<int> EjecutarReprocesoTIEAsync(string[][] datos, string usuario, int barra, System.DateTime fechaProceso, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoMarginalServicio/EjecutarReprocesoVA", ReplyAction="www.coes.org.pe/ICostoMarginalServicio/EjecutarReprocesoVAResponse")]
        int EjecutarReprocesoVA(string horas, string usuario, System.DateTime fechaProceso, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="www.coes.org.pe/ICostoMarginalServicio/EjecutarReprocesoVA", ReplyAction="www.coes.org.pe/ICostoMarginalServicio/EjecutarReprocesoVAResponse")]
        System.Threading.Tasks.Task<int> EjecutarReprocesoVAAsync(string horas, string usuario, System.DateTime fechaProceso, int version);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICostoMarginalServicioChannel : COES.MVC.Intranet.ServiceReferenceCostosMarginales.ICostoMarginalServicio, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CostoMarginalServicioClient : System.ServiceModel.ClientBase<COES.MVC.Intranet.ServiceReferenceCostosMarginales.ICostoMarginalServicio>, COES.MVC.Intranet.ServiceReferenceCostosMarginales.ICostoMarginalServicio {
        
        public CostoMarginalServicioClient() {
        }
        
        public CostoMarginalServicioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CostoMarginalServicioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CostoMarginalServicioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CostoMarginalServicioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public COES.Dominio.DTO.Transferencias.CostoMarginalDTO[] ListarCostosMarginales(int anio, int mes) {
            return base.Channel.ListarCostosMarginales(anio, mes);
        }
        
        public System.Threading.Tasks.Task<COES.Dominio.DTO.Transferencias.CostoMarginalDTO[]> ListarCostosMarginalesAsync(int anio, int mes) {
            return base.Channel.ListarCostosMarginalesAsync(anio, mes);
        }
        
        public void EjecutarCostosMarginalesAlterno(System.DateTime fecha, int indicadorPSSE, bool reproceso, bool indicadorNCP, bool flagWeb, string rutaNCP, bool flagMD, int idEscenario, string usuario, string tipoEstimador, int tipo, int version) {
            base.Channel.EjecutarCostosMarginalesAlterno(fecha, indicadorPSSE, reproceso, indicadorNCP, flagWeb, rutaNCP, flagMD, idEscenario, usuario, tipoEstimador, tipo, version);
        }
        
        public System.Threading.Tasks.Task EjecutarCostosMarginalesAlternoAsync(System.DateTime fecha, int indicadorPSSE, bool reproceso, bool indicadorNCP, bool flagWeb, string rutaNCP, bool flagMD, int idEscenario, string usuario, string tipoEstimador, int tipo, int version) {
            return base.Channel.EjecutarCostosMarginalesAlternoAsync(fecha, indicadorPSSE, reproceso, indicadorNCP, flagWeb, rutaNCP, flagMD, idEscenario, usuario, tipoEstimador, tipo, version);
        }
        
        public void EjecutarCostosMarginales(System.DateTime fecha, int indicadorPSSE, bool reproceso, bool indicadorNCP, bool flagWeb) {
            base.Channel.EjecutarCostosMarginales(fecha, indicadorPSSE, reproceso, indicadorNCP, flagWeb);
        }
        
        public System.Threading.Tasks.Task EjecutarCostosMarginalesAsync(System.DateTime fecha, int indicadorPSSE, bool reproceso, bool indicadorNCP, bool flagWeb) {
            return base.Channel.EjecutarCostosMarginalesAsync(fecha, indicadorPSSE, reproceso, indicadorNCP, flagWeb);
        }
        
        public void ValidacionProcesoCostosMarginales(System.DateTime fecha) {
            base.Channel.ValidacionProcesoCostosMarginales(fecha);
        }
        
        public System.Threading.Tasks.Task ValidacionProcesoCostosMarginalesAsync(System.DateTime fecha) {
            return base.Channel.ValidacionProcesoCostosMarginalesAsync(fecha);
        }
        
        public COES.Servicios.Aplicacion.CortoPlazo.Helper.ResultadoValidacion ObtenerAlertasCostosMarginales(System.DateTime fechaProceso) {
            return base.Channel.ObtenerAlertasCostosMarginales(fechaProceso);
        }
        
        public System.Threading.Tasks.Task<COES.Servicios.Aplicacion.CortoPlazo.Helper.ResultadoValidacion> ObtenerAlertasCostosMarginalesAsync(System.DateTime fechaProceso) {
            return base.Channel.ObtenerAlertasCostosMarginalesAsync(fechaProceso);
        }
        
        public int EjecutarReprocesoMasivo(System.DateTime fechaInicio, System.DateTime fechaFin, string[] horas, bool flagMD, string usuario, string tipoEstimador, int version) {
            return base.Channel.EjecutarReprocesoMasivo(fechaInicio, fechaFin, horas, flagMD, usuario, tipoEstimador, version);
        }
        
        public System.Threading.Tasks.Task<int> EjecutarReprocesoMasivoAsync(System.DateTime fechaInicio, System.DateTime fechaFin, string[] horas, bool flagMD, string usuario, string tipoEstimador, int version) {
            return base.Channel.EjecutarReprocesoMasivoAsync(fechaInicio, fechaFin, horas, flagMD, usuario, tipoEstimador, version);
        }
        
        public int EjecutarReprocesoMasivoModificado(string[][] datos, string usuario, int vesion) {
            return base.Channel.EjecutarReprocesoMasivoModificado(datos, usuario, vesion);
        }
        
        public System.Threading.Tasks.Task<int> EjecutarReprocesoMasivoModificadoAsync(string[][] datos, string usuario, int vesion) {
            return base.Channel.EjecutarReprocesoMasivoModificadoAsync(datos, usuario, vesion);
        }
        
        public int EjecutarReprocesoTIE(string[][] datos, string usuario, int barra, System.DateTime fechaProceso, int version) {
            return base.Channel.EjecutarReprocesoTIE(datos, usuario, barra, fechaProceso, version);
        }
        
        public System.Threading.Tasks.Task<int> EjecutarReprocesoTIEAsync(string[][] datos, string usuario, int barra, System.DateTime fechaProceso, int version) {
            return base.Channel.EjecutarReprocesoTIEAsync(datos, usuario, barra, fechaProceso, version);
        }
        
        public int EjecutarReprocesoVA(string horas, string usuario, System.DateTime fechaProceso, int version) {
            return base.Channel.EjecutarReprocesoVA(horas, usuario, fechaProceso, version);
        }
        
        public System.Threading.Tasks.Task<int> EjecutarReprocesoVAAsync(string horas, string usuario, System.DateTime fechaProceso, int version) {
            return base.Channel.EjecutarReprocesoVAAsync(horas, usuario, fechaProceso, version);
        }
    }
}
